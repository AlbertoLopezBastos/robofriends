{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","components/ErrorBoundary.js","components/CounterButton.js","components/Header.js","constants.js","containers/App.js","actions.js","reducers.js","index.js"],"names":["Card","id","name","email","className","src","alt","CardList","robots","map","robot","SearchBox","searchField","searchChange","aria-label","type","placeholder","onChange","value","Scroll","props","style","overflowY","border","height","children","ErrorBoundary","state","hasError","error","info","this","setState","React","Component","CounterButton","updateCount","prevState","count","nextProps","nextState","color","onClick","Header","CHANGE_SEARCHFIELD","REQUEST_ROBOTS_PENDING","REQUEST_ROBOTS_SUCCESS","REQUEST_ROBOTS_FAILED","App","onRequestRobots","onSearchChange","isPending","filteredRobots","filter","toLowerCase","includes","connect","searchRobots","requestRobots","dispatch","e","text","target","payload","fetch","then","res","json","data","catch","err","initialStateSearch","initialStateRobots","logger","createLogger","rootReducer","combineReducers","action","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.20937389.chunk.js","sourcesContent":["\nconst Card = ({ id, name, email }) => {\n  return (\n    <div className=\"bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5\">\n      <img src={`https://robohash.org/${id}?size=200x200`} alt=\"robot\" />\n      <div>\n        <h2>{name}</h2>\n        <p>{email}</p>\n      </div>\n    </div>\n  );\n}\n\nexport default Card;","import Card from './Card';\n\nconst CardList = ({ robots }) => {\n  // if (true) {\n  //   throw new Error('NO!')\n  // }\n  return (\n    <div>\n      {\n        robots.map((robot) =>\n          <Card\n            key={robot.id}\n            id={robot.id}\n            name={robot.name}\n            email={robot.email} />\n        )\n      }\n    </div>\n  );\n};\n\nexport default CardList;","const SearchBox = ({ searchField, searchChange }) => {\n  return (\n    <div className=\"pa2\">\n      <input\n        aria-label=\"Search Robots\"\n        className=\"pa3 ba b--green bg-light-blue\"\n        type=\"search\"\n        placeholder=\"search robots\"\n        onChange={searchChange}\n        value={searchField}\n      />\n    </div>\n  );\n};\n\nexport default SearchBox;","import React from 'react';\n\nconst Scroll = (props) => {\n  return (\n    <div style={{ overflowY: 'scroll', border: '1px solid black', height: '750px' }}>{props.children}</div>\n  )\n}\n\nexport default Scroll;","import React from 'react';\n\nclass ErrorBoundary extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      hasError: false\n    }\n  }\n\n  componentDidCatch(error, info) {\n    this.setState({ hasError: true });\n  }\n\n  render() {\n    if (this.state.hasError) {\n      return (\n        <h1>Ups! That is not good</h1>\n      )\n    }\n    else {\n      return this.props.children\n    }\n  }\n}\n\nexport default ErrorBoundary;","import React, { Component } from 'react';\n\nclass CounterButton extends React.Component {\n\n  constructor() {\n    super();\n\n    this.state = {\n      count: 0\n    }\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    if (this.state.count !== nextState.count) {\n      return true;\n    }\n    return false;\n  }\n\n  updateCount = () => {\n    this.setState(prevState => { return { count: prevState.count + 1 } });\n  }\n\n  render() {\n    return (\n      <button color={this.props.color} onClick={this.updateCount}>Count: {this.state.count}</button>\n    )\n  }\n}\n\nexport default CounterButton;","import React from 'react';\nimport CounterButton from './CounterButton';\n\nclass Header extends React.Component {\n\n  shouldComponentUpdate(nextProps, nextState) {\n    return false;\n  }\n\n  render() {\n    return (\n      <div>\n        <CounterButton color={'red'} />\n        <h1 className=\"f2\">RoboFriends</h1>\n      </div>\n    )\n  }\n}\n\nexport default Header;","export const CHANGE_SEARCHFIELD = 'CHANGE_SEARCHFIELD';\n\nexport const REQUEST_ROBOTS_PENDING = 'REQUEST_ROBOTS_PENDING';\nexport const REQUEST_ROBOTS_SUCCESS = 'REQUEST_ROBOTS_SUCCESS';\nexport const REQUEST_ROBOTS_FAILED = 'REQUEST_ROBOTS_FAILED';","import React from 'react';\nimport { connect } from 'react-redux';\nimport CardList from '../components/CardList';\nimport SearchBox from '../components/SearchBox';\nimport Scroll from '../components/Scroll';\nimport ErrorBoundary from '../components/ErrorBoundary';\nimport Header from '../components/Header';\nimport 'tachyons';\nimport './App.css';\nimport { setSearchField, requestRobots } from '../actions';\n\nclass App extends React.Component {\n\n  componentDidMount() {\n    this.props.onRequestRobots();\n  }\n\n  render() {\n\n    const { searchField, onSearchChange, robots, isPending } = this.props;\n    const filteredRobots = robots.filter((robot) =>\n      robot.name.toLowerCase().includes(searchField.toLowerCase())\n    );\n    return isPending ?\n      <h1>Loading...</h1> : (\n        <div className=\"tc\" >\n          <Header />\n          <SearchBox searchField={searchField} searchChange={onSearchChange} />\n          <Scroll>\n            <ErrorBoundary>\n              <CardList robots={filteredRobots} />\n            </ErrorBoundary>\n          </Scroll>\n        </div>\n      )\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    searchField: state.searchRobots.searchField,\n    robots: state.requestRobots.robots,\n    isPending: state.requestRobots.isPending,\n    error: state.requestRobots.error\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onSearchChange: (e) => dispatch(setSearchField(e.target.value)),\n    onRequestRobots: () => dispatch(requestRobots())\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","import {\n  CHANGE_SEARCHFIELD,\n  REQUEST_ROBOTS_PENDING,\n  REQUEST_ROBOTS_SUCCESS,\n  REQUEST_ROBOTS_FAILED\n\n} from './constants';\n\nexport const setSearchField = (text) => {\n  return {\n    type: CHANGE_SEARCHFIELD,\n    payload: text\n  }\n};\n\nexport const requestRobots = () => (dispatch) => {\n  dispatch({ type: REQUEST_ROBOTS_PENDING });\n\n  fetch('https://jsonplaceholder.typicode.com/users')\n    .then(res => res.json())\n    .then(data =>\n      dispatch({ type: REQUEST_ROBOTS_SUCCESS, payload: data })\n    )\n    .catch(err =>\n      dispatch({ type: REQUEST_ROBOTS_FAILED, payload: err })\n    );\n}","import {\n  CHANGE_SEARCHFIELD,\n  REQUEST_ROBOTS_PENDING,\n  REQUEST_ROBOTS_SUCCESS,\n  REQUEST_ROBOTS_FAILED\n\n} from './constants';\n\nconst initialStateSearch = {\n  searchField: '',\n};\nconst initialStateRobots = {\n  isPending: false,\n  robots: [],\n  error: ''\n};\n\nexport const searchRobots = (state = initialStateSearch, action = {}) => {\n  switch (action.type) {\n    case CHANGE_SEARCHFIELD:\n      return {\n        ...state, searchField: action.payload\n      }\n    default:\n      return state;\n  }\n}\n\nexport const requestRobots = (state = initialStateRobots, action = {}) => {\n  switch (action.type) {\n    case REQUEST_ROBOTS_PENDING:\n      return { ...state, isPending: true };\n    case REQUEST_ROBOTS_SUCCESS:\n      return { ...state, robots: action.payload, isPending: false };\n    case REQUEST_ROBOTS_FAILED:\n      return { ...state, error: action.payload, isPending: false };\n    default:\n      return state;\n  }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createStore, applyMiddleware, combineReducers } from 'redux';\nimport { Provider } from 'react-redux';\nimport { createLogger } from 'redux-logger';\nimport thunkMiddleware from 'redux-thunk';\nimport App from './containers/App';\nimport './index.css';\nimport { searchRobots, requestRobots } from './reducers';\n\nconst logger = createLogger();\nconst rootReducer = combineReducers({ searchRobots, requestRobots })\nconst store = createStore(rootReducer, applyMiddleware(thunkMiddleware, logger));\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}